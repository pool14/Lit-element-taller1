export interface MatchObject {
    path: string | null;
    url: string;
    isExact: boolean;
    params: Object;
}
export declare class Route {
    path: string;
    component: Function;
    exact?: boolean | undefined;
    constructor(path: string, component: Function, exact?: boolean);
    match(): MatchObject | null;
    mount(): Function | null;
}
export declare class DefaultRoute {
    component: Function;
    constructor(component: Function);
    mount(): Function | null;
}
export declare function PrivateRoute(path: string, auth: boolean, privateComponent: Function, fallbackComponentOrRoute: Function | string, exact?: boolean | undefined): Function | null | void;
export declare function Redirect(redirectPath: string, reRender?: Function): void;
export declare class Router {
    render: Function;
    appRoot: HTMLElement;
    constructor(render: Function, appRoot: HTMLElement);
    forEachNode(array: NodeList, callback: Function, scope?: any): void;
    init(): void;
    reRender(path: string): void;
    updateCurrentLinks(): void;
}
export interface MatchPathOptions {
    path: string;
    exact: boolean | undefined;
}
export interface MatchPathResult {
    path: string | null;
    url: string;
    isExact: boolean;
    params: Object;
}
export declare function matchPath(pathname: string, options: MatchPathOptions): MatchPathResult | null;
